#!/usr/bin/python# -*- coding: utf-8 -*-# 将日志打印到指定文件import timeimport ETL.common as commonimport configparser# 建立Linux连接ssh = common.get_ssh()# 读取配置config = configparser.ConfigParser()config.read(r"C:\Users\93284\PycharmProjects\Pyautomation\ETL\automation.ini")LOG_path = config.get(r'Automation_path', r'LOG_path')Linux_ip = config.get(r'Linux', r'ip')Ftp_port = config.get(r'Linux', r'ftp_port')Linux_username = config.get(r'Linux', r'username')Linux_password = config.get(r'Linux', r'password')def __get_log_file(message):    # 获取日志文件,以当天日期为后缀,如果没有,则创建一个日志文件    date = time.strftime('%Y%m%d', time.localtime(time.time()))    log_path = LOG_path + '/' + date    # 假如文件夹不在,则创建该文件夹    log_file = LOG_path + '/' + date + '/' + message    std_in, std_out, std_err = ssh.exec_command(r'ls -l {0}'.format(log_path))    for i in std_out.readlines():        print('[ INFO  ] -> ' + i)        return log_file    for e in std_err.readlines():        print('[ ERROR ] => ' + e)        ssh.exec_command(r'mkdir -p {0}'.format(log_path))    return log_filedef warn(sys, message):    log_file = __get_log_file(message)    timestamp = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))    ssh.exec_command(r'echo "[ WARNING {0} ] -> {1}" >> {2}'.format(timestamp, sys, log_file))def error(sys, message):    log_file = __get_log_file(message)    timestamp = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))    ssh.exec_command(r'echo "[  ERROR  {0} ] -> {1}" >> {2}'.format(timestamp, sys, log_file))def info(sys, message):    log_file = __get_log_file(message)    timestamp = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))    ssh.exec_command(r'echo "[  INFO   {0} ] -> {1}" >> {2}'.format(timestamp, sys, log_file))if __name__ == '__main__':    log_file_name = __get_log_file(r'etl')